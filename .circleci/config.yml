version: 2.1 # Use v2.1 to enable orb usage.

# The Windows orb gives you everything you
# need to start using the Windows executor.
orbs:
  win: circleci/windows@2.2.0


workflows:
  version: 2

  quality_gates:
    jobs:
      - build_and_test
  deploy:
    jobs:
      - build_and_deploy:
          filters:
            branches:
              only: master
  terraform:
    jobs:
      - initialize
      - plan:
          requires:
            - initialize
      - validate:
          requires: 
            - plan
      - hold-apply:
          type: approval
          requires:
            - validate
      - apply:
          requires:
            - hold-apply

jobs:
  build_and_test: # name of your job
    description: Build & Test
    executor: win/default # executor type
    steps:
      # Commands are run in a Windows
      # virtual machine environment
      - checkout:
          path: C:\Users\circleci\project
      - run:
          name: Nuget Restore
          command: nuget restore HelloApi\HelloApi.sln
      - run:
          name: Build Debug
          command: |
            msbuild HelloApi\HelloApi.sln /p:Configuration=Debug
      - run:
          name: Run Tests
          command: |
            cd "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\common7\ide\extensions\TestPlatform"
            .\vstest.console.exe "C:\Users\circleci\project\HelloApi\HelloApi.Tests\bin\debug\HelloApi.Tests.dll"
  
  build_and_deploy: # name of your job  
    description: Build Release & Deploy
    executor: win/default # executor type

    steps:
      # Commands are run in a Windows
      # virtual machine environment
      - checkout:
          path: C:\Users\circleci\project
      - run:
          name: Nuget Restore
          command: nuget restore HelloApi\HelloApi.sln
      - run:
          name: Build Release
          command: |
            msbuild HelloApi\HelloApi.sln /p:Configuration=Release
      - run:
          name: Deploy
          command: Write-Host "Deploying..."

  initialize:
    working_directory: ~/project
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - checkout
      - run:
          name: terraform init
          command: |
            cd terraform
            rm -rf .terraform
            terraform init -input=false 
      - persist_to_workspace:
          root: .
          paths:
            - .

  plan:
    working_directory: ~/project
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform plan
          command: |
            cd terraform
            terraform plan \
              -var 'location=westus2' \
              -var "tags={environment=dev}" \
              -var 'resource_group_name=rg-vm-test-nemandal' \
              -var 'admin_user=azureuser' \
              -var 'admin_password=Adm1n_Pass' \
              -out out.tfplan
      - persist_to_workspace:
          root: .
          paths:
            - .

  validate:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform validate
          command: |
            cd terraform
            terraform validate
      - persist_to_workspace:
          root: .
          paths:
            - .
  
  apply:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform apply
          command: |
            cd terraform
            terraform apply out.tfplan
      - persist_to_workspace:
          root: .
          paths:
            - .